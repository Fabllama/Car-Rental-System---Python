@startuml sequence_diagram_carsmanagement
title Cars Management Interaction

actor Employee

participant AdminMenu
participant CarsManagement

Employee -> AdminMenu: Login
AdminMenu -> Employee: input("Enter username: ")
AdminMenu -> Employee: input("Enter password: ")

AdminMenu -> AdminMenu: verify_user(username, password)
alt User is Admin
    AdminMenu -> Employee: display_admin_menu()

    Employee -> AdminMenu: Selects "Manage cars" from Admin Menu
    AdminMenu -> CarsManagement: display_manage_cars_menu()
    CarsManagement -> CarsManagement: print("Manage Cars Menu")

    alt Add New Car
        CarsManagement -> Employee: input("Enter choice = 1")
        CarsManagement -> CarsManagement: add_car()
        CarsManagement -> Employee: input("Enter car model: ")
        CarsManagement -> Employee: input("Enter car model year: ")
        CarsManagement -> Employee: input("Enter car color: ")
        CarsManagement -> Employee: input("Enter car license plate: ")
        CarsManagement -> Employee: input("Enter car daily rate: ")
        CarsManagement -> CarsManagement: execute INSERT_CAR query
    else Edit Car
        CarsManagement -> Employee: input("Enter choice = 2")
        CarsManagement -> CarsManagement: edit_car()
        CarsManagement -> CarsManagement: execute SHOW_CAR query
        CarsManagement -> Employee: input("Enter the ID of the car to update the daily rate: ")
        CarsManagement -> Employee: input("Enter new daily rate: ")
        CarsManagement -> CarsManagement: execute UPDATE_CAR query
    else Delete Car
        CarsManagement -> Employee: input("Enter choice = 3")
        CarsManagement -> CarsManagement: delete_car()
        CarsManagement -> CarsManagement: execute SHOW_CAR query
        CarsManagement -> Employee: input("Enter the ID of the car to delete: ")
        CarsManagement -> CarsManagement: execute DELETE_CAR query
    end
    CarsManagement -> AdminMenu: return to Admin Menu
    AdminMenu -> Employee: Logout
end

@enduml
